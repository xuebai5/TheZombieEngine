
//---------------------------------------------------------------------------------
/**
    @scriptclass ntriggerserver
    @cppclass nTriggerServer
    @superclass nRoot
    @classinfo
      Trigger server.
*/
//--------------------------------------------------------------------------------
/**
    @cmd RegisterTrigger
    @output
      v
    @input
      o(Trigger) -- No info
    @info 
      Register a trigger
*/
//--------------------------------------------------------------------------------
/**
    @cmd RemoveTrigger
    @output
      v
    @input
      o(Trigger) -- No info
    @info 
      Remove a trigger (don't delete it)
*/
//--------------------------------------------------------------------------------
/**
    @cmd RegisterAreaEvent
    @output
      i(Event id) -- No info
    @input
      i(Event type) -- No info
      i(Source) -- Entity source id
      i(Emitter) -- Entity emitter id
      i(Duration) -- Duration in ticks, 0 for infinite
      i(Priority) -- Lower numbers have higher priority
    @info 
      Register an area event (an event that reaches only to near triggers)
*/
//--------------------------------------------------------------------------------
/**
    @cmd DeleteEvent
    @output
      v
    @input
      i(Event id) -- No info
    @info 
      Destroy an event
*/
//--------------------------------------------------------------------------------
/**
    @cmd RegisterPendingEvents
    @output
      v
    @input
      v
    @info 
      Register all the events whose registration has been postponed
*/
//--------------------------------------------------------------------------------
/**
    @cmd Update
    @output
      v
    @input
      i(Delta time) -- Time in ticks since last call to Update
    @info 
      Main loop
*/
//--------------------------------------------------------------------------------
/**
    @cmd Reset
    @output
      v
    @input
      v
    @info 
      Clear all triggers and events (triggers are not deleted, just removed)
*/
//--------------------------------------------------------------------------------
/**
    @cmd GetTriggerScript
    @output
      o(Trigger) -- No info
    @input
      s(Script name) -- No info
    @info 
      Return a trigger script object, loading it if needed
*/
//--------------------------------------------------------------------------------
/**
    @cmd GetEventTypesNumber
    @cmdtype getter
    @property EventTypesNumber
    @info 
      Get the number of available event types
*/
//--------------------------------------------------------------------------------
/**
    @cmd IsAFsmInEvent
    @output
      b(FSM in) -- No info
    @input
      i(Event type) -- No info
    @info 
      Tell if an event may be handled by a FSM
*/
//--------------------------------------------------------------------------------
/**
    @cmd IsAnAreaTriggerInEvent
    @output
      b(Area trigger in) -- No info
    @input
      i(Event type) -- No info
    @info 
      Tell if an event may be handled by an area trigger
*/
//--------------------------------------------------------------------------------
/**
    @cmd IsAnAreaTriggerOutEvent
    @output
      b(Area trigger out) -- No info
    @input
      i(Event type) -- No info
    @info 
      Tell if an event may be generated by an area trigger
*/
//--------------------------------------------------------------------------------
/**
    @cmd IsAGenericTriggerInEvent
    @output
      b(Generic trigger in) -- No info
    @input
      i(Event type) -- No info
    @info 
      Tell if an event may be handled by a generic trigger
*/
//--------------------------------------------------------------------------------
/**
    @cmd GetEventPersistentId
    @output
      s(Persistent id) -- No info
    @input
      i(Transient id) -- No info
    @info 
      Return the persistent id of an event type
*/
//--------------------------------------------------------------------------------
/**
    @cmd GetEventTransientId
    @output
      i(Transient id) -- No info
    @input
      s(Persistent id) -- No info
    @info 
      Return the transient id of an event type
*/
//--------------------------------------------------------------------------------
/**
    @cmd GetEventLabel
    @output
      s(Label) -- No info
    @input
      i(Event type) -- No info
    @info 
      Return the label of an event type
*/
