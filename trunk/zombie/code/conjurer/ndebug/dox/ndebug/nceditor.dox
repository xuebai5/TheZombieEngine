
//---------------------------------------------------------------------------------
/**
    @component Common
    @cppclass ncEditor
    @superclass nEntityObject
    @classinfo
      Component Object to save data of the editor in game objects.
*/
//--------------------------------------------------------------------------------
/**
    @cmd SaveChunk
    @output
      v
    @input
      v
    @info 
      entity object persistence to separate file
*/
//--------------------------------------------------------------------------------
/**
    @cmd IsSetEditorKey
    @output
      b(unnamed) -- true if key is found
    @input
      s(key) -- name of the key
    @info 
      return if is set the editor key
*/
//--------------------------------------------------------------------------------
/**
    @cmd SetEditorKeyString
    @output
      v
    @input
      s(key) -- name of the key
      s(value) -- data to save in the key
    @info 
      set a editor key string
*/
//--------------------------------------------------------------------------------
/**
    @cmd GetEditorKeyString
    @output
      s(value) -- data to get from the key
    @input
      s(key) -- name of the key
    @info 
      get a editor key string
*/
//--------------------------------------------------------------------------------
/**
    @cmd SetEditorKeyInt
    @output
      v
    @input
      s(key) -- name of the key
      i(value) -- data to save in the key
    @info 
      set a editor key integer
*/
//--------------------------------------------------------------------------------
/**
    @cmd GetEditorKeyInt
    @output
      i(value) -- data to get from the key
    @input
      s(key) -- name of the key
    @info 
      get a editor key integer
*/
//--------------------------------------------------------------------------------
/**
    @cmd SetEditorKeyFloat
    @output
      v
    @input
      s(key) -- name of the key
      f(value) -- data to save in the key
    @info 
      set a editor key float
*/
//--------------------------------------------------------------------------------
/**
    @cmd GetEditorKeyFloat
    @output
      f(value) -- data to get from the key
    @input
      s(key) -- name of the key
    @info 
      get a editor key float
*/
//--------------------------------------------------------------------------------
/**
    @cmd SetLayerId
    @output
      v
    @input
      i(layerId) -- layer id
    @info 
      set the layer id of the entity
*/
//--------------------------------------------------------------------------------
/**
    @property Deleted
    @format
      b(deleted) -- deleted flag
    @info
      the deleted state of the entity
*/
//--------------------------------------------------------------------------------
/**
    @cmd IsDeleted
    @cmdtype getter
    @property Deleted
    @info 
      Tells if entity has been deleted in the editor but has not been removed from entity server
*/
//--------------------------------------------------------------------------------
/**
    @cmd SetDeleted
    @cmdtype setter
    @property Deleted
    @info 
      Sets deletion flag
*/
