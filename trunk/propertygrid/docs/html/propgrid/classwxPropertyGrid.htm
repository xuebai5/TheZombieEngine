<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>wxPropertyGrid: wxPropertyGrid class Reference</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.3.6 -->
<div class="qindex"><a class="qindex" href="index.htm">Main&nbsp;Page</a> | <a class="qindex" href="modules.htm">Modules</a> | <a class="qindex" href="hierarchy.htm">Class&nbsp;Hierarchy</a> | <a class="qindex" href="annotated.htm">Class&nbsp;List</a> | <a class="qindex" href="files.htm">File&nbsp;List</a> | <a class="qindex" href="functions.htm">Class&nbsp;Members</a></div>
<h1>wxPropertyGrid Class Reference</h1>wxPropertyGrid is a specialized two-column grid for editing properties such as strings, numbers, flagsets, fonts, and colours. wxPropertySheet used to do the very same thing, but it hasn't been updated for a while and it is currently deprecated.  
<a href="#_details">More...</a>
<p>
<code>#include &lt;<a class="el" href="propgrid_8h-source.htm">propgrid.h</a>&gt;</code>
<p>
<a href="classwxPropertyGrid-members.htm">List of all members.</a><table border=0 cellpadding=0 cellspacing=0>
<tr><td></td></tr>
<tr><td colspan=2><br><h2>[NOHEADER]</h2></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#z0_0">EditorsValueWasModified</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Call when editor widget's contents is modified.  <a href="#z0_0"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="z0_1" doxytag="wxPropertyGrid::EditorsValueWasNotModified" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#z0_1">EditorsValueWasNotModified</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Reverse of <a class="el" href="classwxPropertyGrid.htm#z0_0">EditorsValueWasModified()</a>. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="z0_2" doxytag="wxPropertyGrid::IsEditorsValueModified" ></a>
bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#z0_2">IsEditorsValueModified</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns true if editor's value was marked modified. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="z0_3" doxytag="wxPropertyGrid::GenerateEditorButton" ></a>
wxPGCtrlClass *&nbsp;</td><td class="memItemRight" valign=bottom><b>GenerateEditorButton</b> (const wxPoint &amp;pos, const wxSize &amp;sz)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>wxPGCtrlClass *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#z0_4">GenerateEditorTextCtrl</a> (const wxPoint &amp;pos, const wxSize &amp;sz, const wxString &amp;value, wxPGCtrlClass *secondary, const wxSize &amp;imsz=wxDefaultSize)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Shortcut for creating text editor widget.  <a href="#z0_4"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="z0_5" doxytag="wxPropertyGrid::GenerateEditorTextCtrlAndButton" ></a>
wxPGCtrlClass *&nbsp;</td><td class="memItemRight" valign=bottom><b>GenerateEditorTextCtrlAndButton</b> (const wxPoint &amp;pos, const wxSize &amp;sz, wxPGCtrlClass **psecondary, int limited_editing, <a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *property)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>wxPoint&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#z0_6">GetGoodEditorDialogPosition</a> (<a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *p, const wxSize &amp;sz)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Generates position for a widget editor dialog box.  <a href="#z0_6"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="z0_7" doxytag="wxPropertyGrid::GetCCManager" ></a>
wxCustomControlManager *&nbsp;</td><td class="memItemRight" valign=bottom><b>GetCCManager</b> ()</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="z0_8" doxytag="wxPropertyGrid::OnCustomEditorEvent" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#z0_8">OnCustomEditorEvent</a> (wxEvent &amp;event)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Pass this function to Connect calls in propertyclass::CreateEditor. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#z0_9">SLAlloc</a> (unsigned int itemcount, const wxChar **items)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Puts items into sl.  <a href="#z0_9"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="z0_10" doxytag="wxPropertyGrid::SLGet" ></a>
wxArrayString &amp;&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#z0_10">SLGet</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns sl. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="z0_11" doxytag="wxPropertyGrid::ExpandEscapeSequences" ></a>
wxString &amp;&nbsp;</td><td class="memItemRight" valign=bottom><b>ExpandEscapeSequences</b> (wxString &amp;dst_str, wxString &amp;src_str)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="z0_12" doxytag="wxPropertyGrid::CreateEscapeSequences" ></a>
wxString &amp;&nbsp;</td><td class="memItemRight" valign=bottom><b>CreateEscapeSequences</b> (wxString &amp;dst_str, wxString &amp;src_str)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#z0_13">ArrayStringToString</a> (wxString &amp;dst, const wxArrayString &amp;src, wxChar preDelim, wxChar postDelim, int flags)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Generates contents for string dst based on the convetents of wxArrayString src.  <a href="#z0_13"></a><br><br></td></tr>
<tr><td colspan=2><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a0">wxPropertyGrid</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Two step constructor.  <a href="#a0"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a1">wxPropertyGrid</a> (wxWindow *parent, wxWindowID id=-1, const wxPoint &amp;pos=wxDefaultPosition, const wxSize &amp;size=wxDefaultSize, long style=wxPG_DEFAULT_STYLE, const wxChar *name=wxPropertyGridNameStr)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">The default constructor.  <a href="#a1"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a2" doxytag="wxPropertyGrid::~wxPropertyGrid" ></a>
virtual&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a2">~wxPropertyGrid</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Destructor. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>wxPGId&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a3">Append</a> (<a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *property)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Appends property to the list.  <a href="#a3"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a4" doxytag="wxPropertyGrid::AppendCategory" ></a>
wxPGId&nbsp;</td><td class="memItemRight" valign=bottom><b>AppendCategory</b> (const wxString &amp;label, const wxString &amp;name=wxPG_LABEL)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a5" doxytag="wxPropertyGrid::Append" ></a>
wxPGId&nbsp;</td><td class="memItemRight" valign=bottom><b>Append</b> (const wxString &amp;label, const wxString &amp;name, const wxString &amp;value=wxEmptyString)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a6" doxytag="wxPropertyGrid::Append" ></a>
wxPGId&nbsp;</td><td class="memItemRight" valign=bottom><b>Append</b> (const wxString &amp;label, const wxString &amp;name, int value)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a7" doxytag="wxPropertyGrid::Append" ></a>
wxPGId&nbsp;</td><td class="memItemRight" valign=bottom><b>Append</b> (const wxString &amp;label, const wxString &amp;name, double value)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a8" doxytag="wxPropertyGrid::Append" ></a>
wxPGId&nbsp;</td><td class="memItemRight" valign=bottom><b>Append</b> (const wxString &amp;label, const wxString &amp;name, bool value)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a9" doxytag="wxPropertyGrid::AppendIn" ></a>
wxPGId&nbsp;</td><td class="memItemRight" valign=bottom><b>AppendIn</b> (const wxPGId id, <a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *property)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a10" doxytag="wxPropertyGrid::AppendIn" ></a>
wxPGId&nbsp;</td><td class="memItemRight" valign=bottom><b>AppendIn</b> (wxPGNameStr name, <a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *property)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a11" doxytag="wxPropertyGrid::AppendIn" ></a>
wxPGId&nbsp;</td><td class="memItemRight" valign=bottom><b>AppendIn</b> (const wxPGId id, const wxString &amp;label, const wxString &amp;propname, wxVariant &amp;value)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a12" doxytag="wxPropertyGrid::AppendIn" ></a>
wxPGId&nbsp;</td><td class="memItemRight" valign=bottom><b>AppendIn</b> (wxPGNameStr name, const wxString &amp;label, const wxString &amp;propname, wxVariant &amp;value)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a13">CenterSplitter</a> (bool enable_auto_centering)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Centers the splitter.  <a href="#a13"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a14">Create</a> (wxWindow *parent, wxWindowID id=-1, const wxPoint &amp;pos=wxDefaultPosition, const wxSize &amp;size=wxDefaultSize, long style=wxPG_DEFAULT_STYLE, const wxChar *name=wxPropertyGridNameStr)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Two step creation.  <a href="#a14"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a15">Clear</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Deletes all properties.  <a href="#a15"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a16" doxytag="wxPropertyGrid::ClearModifiedStatus" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a16">ClearModifiedStatus</a> (wxPGId id)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Resets modified status of a property and all sub-properties. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a17" doxytag="wxPropertyGrid::ClearModifiedStatus" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a17">ClearModifiedStatus</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Resets modified status of all properties. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a18" doxytag="wxPropertyGrid::ClearPropertyValue" ></a>
bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a18">ClearPropertyValue</a> (wxPGId id)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Resets value of a property to its default. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a19" doxytag="wxPropertyGrid::ClearPropertyValue" ></a>
bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a19">ClearPropertyValue</a> (wxPGNameStr name)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Resets value of a property to its default. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a20" doxytag="wxPropertyGrid::ClearSelection" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a20">ClearSelection</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Deselect current selection, if any. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a21">Collapse</a> (wxPGId p)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Collapses given category or property with children.  <a href="#a21"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a22">Collapse</a> (wxPGNameStr name)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Collapses given category or property with children.  <a href="#a22"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a23" doxytag="wxPropertyGrid::CollapseAll" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a23">CollapseAll</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Collapses all items that can be collapsed. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a24" doxytag="wxPropertyGrid::Compact" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a24">Compact</a> (bool compact)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Shows(arg = FALSE) or hides(arg = TRUE) all hideable properties. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a25">Delete</a> (wxPGId id)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Deletes a property by id.  <a href="#a25"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a26" doxytag="wxPropertyGrid::Delete" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a26">Delete</a> (wxPGNameStr name)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Deletes a property by name. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a27" doxytag="wxPropertyGrid::Disable" ></a>
bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a27">Disable</a> (wxPGId id)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Disables property. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a28" doxytag="wxPropertyGrid::Disable" ></a>
bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a28">Disable</a> (wxPGNameStr name)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Disables property. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a29" doxytag="wxPropertyGrid::DisableProperty" ></a>
bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a29">DisableProperty</a> (wxPGId id)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Disables property. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a30" doxytag="wxPropertyGrid::DisableProperty" ></a>
bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a30">DisableProperty</a> (wxPGNameStr name)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Disables property. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a31" doxytag="wxPropertyGrid::EnableCategories" ></a>
bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a31">EnableCategories</a> (bool enable)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Enables or disables (shows/hides) categories according to parameter enable. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a32" doxytag="wxPropertyGrid::Enable" ></a>
bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a32">Enable</a> (wxPGId id, bool enable=TRUE)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Enables or disables property, depending on whether enable is TRUE or FALSE. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a33" doxytag="wxPropertyGrid::Enable" ></a>
bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a33">Enable</a> (wxPGNameStr name, bool enable=TRUE)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Enables or disables property, depending on whether enable is TRUE or FALSE. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a34" doxytag="wxPropertyGrid::EnableProperty" ></a>
bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a34">EnableProperty</a> (wxPGId id, bool enable=TRUE)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Enables or disables property, depending on whether enable is TRUE or FALSE. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a35" doxytag="wxPropertyGrid::EnableProperty" ></a>
bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a35">EnableProperty</a> (wxPGNameStr name, bool enable=TRUE)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Enables or disables property, depending on whether enable is TRUE or FALSE. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a36">EnsureVisible</a> (wxPGId id)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Scrolls and/or expands items to ensure that the given item is visible.  <a href="#a36"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a37">EnsureVisible</a> (wxPGNameStr name)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Scrolls and/or expands items to ensure that the given item is visible.  <a href="#a37"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a38">Expand</a> (wxPGId id)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Expands given category or property with children.  <a href="#a38"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a39">Expand</a> (wxPGNameStr name)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Expands given category or property with children.  <a href="#a39"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a40" doxytag="wxPropertyGrid::ExpandAll" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a40">ExpandAll</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Expands all items that can be expanded. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>wxVariant&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a41">GetPropertyValues</a> (const wxString &amp;listname=wxEmptyString, wxPGId baseparent=wxPGIdGen((<a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *) NULL), long flags=0) const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns a wxVariant list containing wxVariant versions of all property values.  <a href="#a41"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a42" doxytag="wxPropertyGrid::GetCaptionFont" ></a>
wxFont *&nbsp;</td><td class="memItemRight" valign=bottom><b>GetCaptionFont</b> ()</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a43" doxytag="wxPropertyGrid::GetCaptionForegroundColour" ></a>
wxColour&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a43">GetCaptionForegroundColour</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns current category caption text colour. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a44" doxytag="wxPropertyGrid::GetCellBackgroundColour" ></a>
wxColour&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a44">GetCellBackgroundColour</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns current cell background colour. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a45" doxytag="wxPropertyGrid::GetCellTextColour" ></a>
wxColour&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a45">GetCellTextColour</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns current cell text colour. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a46" doxytag="wxPropertyGrid::GetChildrenCount" ></a>
size_t&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a46">GetChildrenCount</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns number of children of the root property. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a47" doxytag="wxPropertyGrid::GetChildrenCount" ></a>
size_t&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a47">GetChildrenCount</a> (wxPGId id) const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns number of children for the property. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a48" doxytag="wxPropertyGrid::GetChildrenCount" ></a>
size_t&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a48">GetChildrenCount</a> (wxPGNameStr name)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns number of children for the property. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a49" doxytag="wxPropertyGrid::GetFirst" ></a>
wxPGId&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a49">GetFirst</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns id of first item, whether it is a category or property. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>wxPGId&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a50">GetFirstVisible</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns id of first visible item, whether it is a category or property.  <a href="#a50"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a51" doxytag="wxPropertyGrid::GetFontHeight" ></a>
int&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a51">GetFontHeight</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns height of highest characters of used font. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="classwxPropertyGrid.htm">wxPropertyGrid</a> *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a52">GetGrid</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns pointer to itself.  <a href="#a52"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a53" doxytag="wxPropertyGrid::GetFirstCategory" ></a>
wxPGId&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a53">GetFirstCategory</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns id of first category (from target page). <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>wxPGId&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a54">GetFirstChild</a> (wxPGId parent)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns id of first child of given property.  <a href="#a54"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a55" doxytag="wxPropertyGrid::GetFirstChild" ></a>
wxPGId&nbsp;</td><td class="memItemRight" valign=bottom><b>GetFirstChild</b> (wxPGNameStr name)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a56" doxytag="wxPropertyGrid::GetFirstProperty" ></a>
wxPGId&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a56">GetFirstProperty</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns id of first property that is not a category. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a57" doxytag="wxPropertyGrid::GetItemAtY" ></a>
wxPGId&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a57">GetItemAtY</a> (int y)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns property (or category) at given y coordinate (relateive to control's top left). <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>wxPGId&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a58">GetLastProperty</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns id of last item.  <a href="#a58"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>wxPGId&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a59">GetLastChild</a> (wxPGId parent)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns id of last child of given property.  <a href="#a59"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a60" doxytag="wxPropertyGrid::GetLastChild" ></a>
wxPGId&nbsp;</td><td class="memItemRight" valign=bottom><b>GetLastChild</b> (wxPGNameStr name)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>wxPGId&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a61">GetLastVisible</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns id of last visible item.  <a href="#a61"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a62" doxytag="wxPropertyGrid::GetLineColour" ></a>
wxColour&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a62">GetLineColour</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns colour of lines between cells. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>wxPGId&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a63">GetNextProperty</a> (wxPGId id)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns id of next property.  <a href="#a63"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a64" doxytag="wxPropertyGrid::GetNextCategory" ></a>
wxPGId&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a64">GetNextCategory</a> (wxPGId id) const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns id of next category after a given property (which does not have to be category). <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a65" doxytag="wxPropertyGrid::GetNextSibling" ></a>
wxPGId&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a65">GetNextSibling</a> (wxPGId id)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns next item under the same parent. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a66" doxytag="wxPropertyGrid::GetNextSibling" ></a>
wxPGId&nbsp;</td><td class="memItemRight" valign=bottom><b>GetNextSibling</b> (wxPGNameStr name)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>wxPGId&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a67">GetNextVisible</a> (wxPGId property) const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns id of next visible item.  <a href="#a67"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>wxPGId&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a68">GetPrevProperty</a> (wxPGId id)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns id of previous property.  <a href="#a68"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a69" doxytag="wxPropertyGrid::GetPrevSibling" ></a>
wxPGId&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a69">GetPrevSibling</a> (wxPGId id)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns id of previous item under the same parent. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a70" doxytag="wxPropertyGrid::GetPrevSibling" ></a>
wxPGId&nbsp;</td><td class="memItemRight" valign=bottom><b>GetPrevSibling</b> (wxPGNameStr name)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a71" doxytag="wxPropertyGrid::GetPrevVisible" ></a>
wxPGId&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a71">GetPrevVisible</a> (wxPGId property)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns id of previous visible property. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>wxPGId&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a72">GetPropertyCategory</a> (wxPGId id) const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns id of property's category, if any.  <a href="#a72"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a73" doxytag="wxPropertyGrid::GetPropertyCategory" ></a>
wxPGId&nbsp;</td><td class="memItemRight" valign=bottom><b>GetPropertyCategory</b> (wxPGNameStr name)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a74" doxytag="wxPropertyGrid::GetPropertyClassName" ></a>
const wxChar *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a74">GetPropertyClassName</a> (wxPGId id) const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Gets name of property's constructor function. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a75" doxytag="wxPropertyGrid::GetPropertyClassName" ></a>
const wxChar *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a75">GetPropertyClassName</a> (wxPGNameStr name) const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Gets name of property's constructor function. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a76" doxytag="wxPropertyGrid::GetPropertyColour" ></a>
wxColour&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a76">GetPropertyColour</a> (wxPGId id) const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns cell background colour of a property. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a77" doxytag="wxPropertyGrid::GetPropertyColour" ></a>
wxColour&nbsp;</td><td class="memItemRight" valign=bottom><b>GetPropertyColour</b> (wxPGNameStr name) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a78" doxytag="wxPropertyGrid::GetPropertyHelpString" ></a>
const wxString &amp;&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a78">GetPropertyHelpString</a> (wxPGId id) const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns help string associated with a property. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a79" doxytag="wxPropertyGrid::GetPropertyHelpString" ></a>
const wxString &amp;&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a79">GetPropertyHelpString</a> (wxPGNameStr name) const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns help string associated with a property. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a80" doxytag="wxPropertyGrid::GetPropertyIndex" ></a>
unsigned int&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a80">GetPropertyIndex</a> (wxPGId id)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns property's position under its parent. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a81" doxytag="wxPropertyGrid::GetPropertyIndex" ></a>
unsigned int&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a81">GetPropertyIndex</a> (wxPGNameStr name)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns property's position under its parent. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a82" doxytag="wxPropertyGrid::GetPropertyLabel" ></a>
const wxString &amp;&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a82">GetPropertyLabel</a> (wxPGId id)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns label of a property. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a83" doxytag="wxPropertyGrid::GetPropertyLabel" ></a>
const wxString &amp;&nbsp;</td><td class="memItemRight" valign=bottom><b>GetPropertyLabel</b> (wxPGNameStr name)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a84" doxytag="wxPropertyGrid::GetPropertyName" ></a>
const wxString &amp;&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a84">GetPropertyName</a> (wxPGId id)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns name of a property. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a85" doxytag="wxPropertyGrid::GetPropertyParent" ></a>
wxPGId&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a85">GetPropertyParent</a> (wxPGId id)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns parent item of a property. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a86" doxytag="wxPropertyGrid::GetPropertyParent" ></a>
wxPGId&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a86">GetPropertyParent</a> (wxPGNameStr name)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns parent item of a property. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a87" doxytag="wxPropertyGrid::GetPropertyPriority" ></a>
int&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a87">GetPropertyPriority</a> (wxPGId id)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns priority of a property (wxPG_HIGH or wxPG_LOW). <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>wxVariant&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a88">GetPropertyValue</a> (wxPGId id)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Gets value of a property.  <a href="#a88"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>wxVariant&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a89">GetPropertyValue</a> (wxPGNameStr name)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Gets value of a property.  <a href="#a89"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a90" doxytag="wxPropertyGrid::GetPropertyValueAsString" ></a>
wxString&nbsp;</td><td class="memItemRight" valign=bottom><b>GetPropertyValueAsString</b> (wxPGNameStr name) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a91" doxytag="wxPropertyGrid::GetPropertyValueAsLong" ></a>
long&nbsp;</td><td class="memItemRight" valign=bottom><b>GetPropertyValueAsLong</b> (wxPGNameStr name) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a92" doxytag="wxPropertyGrid::GetPropertyValueAsInt" ></a>
int&nbsp;</td><td class="memItemRight" valign=bottom><b>GetPropertyValueAsInt</b> (wxPGNameStr name) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a93" doxytag="wxPropertyGrid::GetPropertyValueAsBool" ></a>
bool&nbsp;</td><td class="memItemRight" valign=bottom><b>GetPropertyValueAsBool</b> (wxPGNameStr name) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a94" doxytag="wxPropertyGrid::GetPropertyValueAsDouble" ></a>
double&nbsp;</td><td class="memItemRight" valign=bottom><b>GetPropertyValueAsDouble</b> (wxPGNameStr name) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a95" doxytag="wxPropertyGrid::GetPropertyValueAsArrayString" ></a>
const wxArrayString &amp;&nbsp;</td><td class="memItemRight" valign=bottom><b>GetPropertyValueAsArrayString</b> (wxPGNameStr name) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a96" doxytag="wxPropertyGrid::GetPropertyValueAsWxObjectPtr" ></a>
const wxObject *&nbsp;</td><td class="memItemRight" valign=bottom><b>GetPropertyValueAsWxObjectPtr</b> (wxPGNameStr name) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a97" doxytag="wxPropertyGrid::GetPropertyValueAsPoint" ></a>
const wxPoint &amp;&nbsp;</td><td class="memItemRight" valign=bottom><b>GetPropertyValueAsPoint</b> (wxPGNameStr name) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a98" doxytag="wxPropertyGrid::GetPropertyValueAsSize" ></a>
const wxSize &amp;&nbsp;</td><td class="memItemRight" valign=bottom><b>GetPropertyValueAsSize</b> (wxPGNameStr name) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a99" doxytag="wxPropertyGrid::GetPropertyValueAsArrayInt" ></a>
const wxArrayInt &amp;&nbsp;</td><td class="memItemRight" valign=bottom><b>GetPropertyValueAsArrayInt</b> (wxPGNameStr name) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a100" doxytag="wxPropertyGrid::GetPropertyValueType" ></a>
const <a class="el" href="classwxPGValueType.htm">wxPGValueType</a> *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a100">GetPropertyValueType</a> (wxPGId id)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns a <a class="el" href="classwxPGValueType.htm">wxPGValueType</a> class instance that describes the type. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a101" doxytag="wxPropertyGrid::GetPropertyValueType" ></a>
const <a class="el" href="classwxPGValueType.htm">wxPGValueType</a> *&nbsp;</td><td class="memItemRight" valign=bottom><b>GetPropertyValueType</b> (wxPGNameStr name)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>wxPGId&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a102">GetPropertyByLabel</a> (const wxString &amp;name) const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns id of property with given label (case-sensitive).  <a href="#a102"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>wxPGId&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a103">GetPropertyByName</a> (wxPGNameStr name) const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns id of property with given name (case-sensitive).  <a href="#a103"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a104" doxytag="wxPropertyGrid::GetPropertyByNameWithAssert" ></a>
wxPGId&nbsp;</td><td class="memItemRight" valign=bottom><b>GetPropertyByNameWithAssert</b> (wxPGNameStr name) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>wxPGId&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a105">GetRoot</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns "root property".  <a href="#a105"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a106" doxytag="wxPropertyGrid::GetRowHeight" ></a>
int&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a106">GetRowHeight</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns height of a single grid row (in pixels). <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a107" doxytag="wxPropertyGrid::GetSelectedProperty" ></a>
wxPGId&nbsp;</td><td class="memItemRight" valign=bottom><b>GetSelectedProperty</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a108" doxytag="wxPropertyGrid::GetSelection" ></a>
wxPGId&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a108">GetSelection</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns currently selected property. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a109" doxytag="wxPropertyGrid::GetSelectionBackgroundColour" ></a>
wxColour&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a109">GetSelectionBackgroundColour</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns current selection background colour. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a110" doxytag="wxPropertyGrid::GetSelectionForegroundColour" ></a>
wxColour&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a110">GetSelectionForegroundColour</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns current selection text colour. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a111" doxytag="wxPropertyGrid::GetSplitterPosition" ></a>
int&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a111">GetSplitterPosition</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns current splitter x position. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a112" doxytag="wxPropertyGrid::GetState" ></a>
<a class="el" href="classwxPropertyGridState.htm">wxPropertyGridState</a> *&nbsp;</td><td class="memItemRight" valign=bottom><b>GetState</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a113" doxytag="wxPropertyGrid::GetVerticalSpacing" ></a>
int&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a113">GetVerticalSpacing</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns current vertical spacing. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a114" doxytag="wxPropertyGrid::HasSelection" ></a>
bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a114">HasSelection</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns TRUE if a property is selected. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a115" doxytag="wxPropertyGrid::HideLowPriority" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a115">HideLowPriority</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Hides all low priority properties. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>wxPGId&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a116">Insert</a> (wxPGId priorthis, <a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *newproperty)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Inserts property to the list.  <a href="#a116"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a117" doxytag="wxPropertyGrid::Insert" ></a>
wxPGId&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a117">Insert</a> (wxPGNameStr name, <a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *newproperty)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight"><a class="el" href="">wxPropertyGrid::Insert </a> <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a118" doxytag="wxPropertyGrid::Insert" ></a>
wxPGId&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a118">Insert</a> (wxPGId id, int index, <a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *newproperty)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight"><a class="el" href="">wxPropertyGrid::Insert </a> <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a119" doxytag="wxPropertyGrid::Insert" ></a>
wxPGId&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a119">Insert</a> (wxPGNameStr name, int index, <a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *newproperty)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight"><a class="el" href="">wxPropertyGrid::Insert </a> <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a120" doxytag="wxPropertyGrid::InsertCategory" ></a>
wxPGId&nbsp;</td><td class="memItemRight" valign=bottom><b>InsertCategory</b> (wxPGId id, int index, const wxString &amp;label, const wxString &amp;name=wxPG_LABEL)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a121" doxytag="wxPropertyGrid::Insert" ></a>
wxPGId&nbsp;</td><td class="memItemRight" valign=bottom><b>Insert</b> (wxPGId id, int index, const wxString &amp;label, const wxString &amp;name, const wxString &amp;value=wxEmptyString)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a122" doxytag="wxPropertyGrid::Insert" ></a>
wxPGId&nbsp;</td><td class="memItemRight" valign=bottom><b>Insert</b> (wxPGId id, int index, const wxString &amp;label, const wxString &amp;name, int value)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a123" doxytag="wxPropertyGrid::Insert" ></a>
wxPGId&nbsp;</td><td class="memItemRight" valign=bottom><b>Insert</b> (wxPGId id, int index, const wxString &amp;label, const wxString &amp;name, double value)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a124" doxytag="wxPropertyGrid::Insert" ></a>
wxPGId&nbsp;</td><td class="memItemRight" valign=bottom><b>Insert</b> (wxPGId id, int index, const wxString &amp;label, const wxString &amp;name, bool value)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a125" doxytag="wxPropertyGrid::IsAnyModified" ></a>
bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a125">IsAnyModified</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns true if any property has been modified by the user. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a126" doxytag="wxPropertyGrid::IsPropertyEnabled" ></a>
bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a126">IsPropertyEnabled</a> (wxPGId id) const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns TRUE if property is enabled. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a127" doxytag="wxPropertyGrid::IsPropertyEnabled" ></a>
bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a127">IsPropertyEnabled</a> (wxPGNameStr name)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns TRUE if property is enabled. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a128">IsFrozen</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns TRUE if updating is frozen (ie.  <a href="#a128"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a129" doxytag="wxPropertyGrid::IsPropertyValueType" ></a>
bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a129">IsPropertyValueType</a> (wxPGId id, const wxChar *typestr)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns true if property's value type has name typestr. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a130" doxytag="wxPropertyGrid::IsPropertyValueType" ></a>
bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a130">IsPropertyValueType</a> (wxPGId id, const <a class="el" href="classwxPGValueType.htm">wxPGValueType</a> *valuetype)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns true if property's value type is valuetype. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a131" doxytag="wxPropertyGrid::IsPropertyValueType" ></a>
bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a131">IsPropertyValueType</a> (wxPGId id, const wxClassInfo *classinfo)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns true if property's value type has same name as a class. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a132" doxytag="wxPropertyGrid::IsPropertyValueType" ></a>
bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a132">IsPropertyValueType</a> (wxPGNameStr name, const wxChar *typestr)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns true if property's value type has name typestr. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a133" doxytag="wxPropertyGrid::IsPropertyValueType" ></a>
bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a133">IsPropertyValueType</a> (wxPGNameStr name, const <a class="el" href="classwxPGValueType.htm">wxPGValueType</a> *valuetype)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns true if property's value type is valuetype. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a134" doxytag="wxPropertyGrid::IsPropertyValueType" ></a>
bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a134">IsPropertyValueType</a> (wxPGNameStr name, const wxClassInfo *classinfo)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns true if property's value type has same name as a class. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a135" doxytag="wxPropertyGrid::IsPropertySelected" ></a>
bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a135">IsPropertySelected</a> (wxPGId id) const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns TRUE if given property is selected. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a136" doxytag="wxPropertyGrid::IsPropertySelected" ></a>
bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a136">IsPropertySelected</a> (wxPGNameStr name)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns TRUE if given property is selected. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a137" doxytag="wxPropertyGrid::IsPropertyExpanded" ></a>
bool&nbsp;</td><td class="memItemRight" valign=bottom><b>IsPropertyExpanded</b> (wxPGNameStr name)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a138" doxytag="wxPropertyGrid::IsModified" ></a>
bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a138">IsModified</a> (wxPGId id) const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns TRUE if property has been modified after value set or modify flag clear by software. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a139" doxytag="wxPropertyGrid::IsModified" ></a>
bool&nbsp;</td><td class="memItemRight" valign=bottom><b>IsModified</b> (wxPGNameStr name)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a140" doxytag="wxPropertyGrid::IsPropertyCategory" ></a>
bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a140">IsPropertyCategory</a> (wxPGId id) const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns true if property is a category. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a141" doxytag="wxPropertyGrid::IsPropertyCategory" ></a>
bool&nbsp;</td><td class="memItemRight" valign=bottom><b>IsPropertyCategory</b> (wxPGNameStr name)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a142" doxytag="wxPropertyGrid::IsPropertyModified" ></a>
bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a142">IsPropertyModified</a> (wxPGId id) const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns TRUE if property has been modified after value set or modify flag clear by software. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a143" doxytag="wxPropertyGrid::IsPropertyModified" ></a>
bool&nbsp;</td><td class="memItemRight" valign=bottom><b>IsPropertyModified</b> (wxPGNameStr name)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a144" doxytag="wxPropertyGrid::IsPropertyValueUnspecified" ></a>
bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a144">IsPropertyValueUnspecified</a> (wxPGId id) const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns TRUE if property value is set to unspecified. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a145" doxytag="wxPropertyGrid::IsPropertyValueUnspecified" ></a>
bool&nbsp;</td><td class="memItemRight" valign=bottom><b>IsPropertyValueUnspecified</b> (wxPGNameStr name)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a146" doxytag="wxPropertyGrid::LimitPropertyEditing" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a146">LimitPropertyEditing</a> (wxPGId id, bool limit=TRUE)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Disables (limit = TRUE) or enables (limit = FALSE) wxTextCtrl editor of a property, if it is not the sole mean to edit the value. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a147" doxytag="wxPropertyGrid::LimitPropertyEditing" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a147">LimitPropertyEditing</a> (wxPGNameStr name, bool limit=TRUE)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Disables (limit = TRUE) or enables (limit = FALSE) wxTextCtrl editor of a property, if it is not the sole mean to edit the value. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a148">RedrawAllVisible</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Redraws the entire window.  <a href="#a148"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a149" doxytag="wxPropertyGrid::ResetColours" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a149">ResetColours</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Resets all colours to the original system values. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a150" doxytag="wxPropertyGrid::SetCurrentCategory" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a150">SetCurrentCategory</a> (wxPGId id)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets the current category - Append will add non-categories under this one. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a151" doxytag="wxPropertyGrid::SetCurrentCategory" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a151">SetCurrentCategory</a> (wxPGNameStr name=wxEmptyString)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets the current category - Append will add non-categories under this one. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a152" doxytag="wxPropertyGrid::SetBackgroundColour" ></a>
virtual bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a152">SetBackgroundColour</a> (const wxColour &amp;col)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets background colour - applies to margin background and separator lines. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a153">SetPropertyAttribute</a> (wxPGId id, int attrid, wxPGVariant value, long arg_flags=0)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets an attribute of a property.  <a href="#a153"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a154" doxytag="wxPropertyGrid::SetPropertyAttribute" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><b>SetPropertyAttribute</b> (wxPGNameStr name, int attrid, wxPGVariant value, long arg_flags=0)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a155">SetPropertyColour</a> (wxPGId id, const wxColour &amp;col)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets background colour of property and all its children.  <a href="#a155"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a156" doxytag="wxPropertyGrid::SetPropertyColour" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><b>SetPropertyColour</b> (wxPGNameStr name, const wxColour &amp;col)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a157" doxytag="wxPropertyGrid::SetPropertyColourToDefault" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a157">SetPropertyColourToDefault</a> (wxPGId id)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets background colour of property and all its children to the default. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a158" doxytag="wxPropertyGrid::SetPropertyColourToDefault" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><b>SetPropertyColourToDefault</b> (wxPGNameStr name)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a159" doxytag="wxPropertyGrid::SetCaptionForegroundColour" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a159">SetCaptionForegroundColour</a> (const wxColour &amp;col)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets category caption colour. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a160">SetCellBackgroundColour</a> (const wxColour &amp;col)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets default cell background colour - applies to property cells.  <a href="#a160"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a161">SetCellTextColour</a> (const wxColour &amp;col)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets default cell text colour - applies to property name and value text.  <a href="#a161"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a162" doxytag="wxPropertyGrid::SetLineColour" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a162">SetLineColour</a> (const wxColour &amp;col)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets colour of lines between cells. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a163" doxytag="wxPropertyGrid::SetSelectionBackground" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a163">SetSelectionBackground</a> (const wxColour &amp;col)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets selection background colour - applies to selected property name background. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a164" doxytag="wxPropertyGrid::SetSelectionForeground" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a164">SetSelectionForeground</a> (const wxColour &amp;col)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets selection foreground colour - applies to selected property name text. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a165" doxytag="wxPropertyGrid::SetSplitterPosition" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a165">SetSplitterPosition</a> (int newxpos, bool refresh=TRUE)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets x coordinate of the splitter. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a166">SelectProperty</a> (wxPGId id, bool focus=FALSE)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Selects a property.  <a href="#a166"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a167" doxytag="wxPropertyGrid::SelectProperty" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><b>SelectProperty</b> (wxPGNameStr name, bool focus=FALSE)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a168" doxytag="wxPropertyGrid::SetPropertyPriority" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a168">SetPropertyPriority</a> (wxPGId id, int priority)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Property is be hidden/shown when hider button is toggled or when <a class="el" href="classwxPropertyGrid.htm#a24">wxPropertyGrid::Compact</a> is called. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a169" doxytag="wxPropertyGrid::SetPropertyPriority" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a169">SetPropertyPriority</a> (wxPGNameStr name, int priority)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Property is be hidden/shown when hider button is toggled or when <a class="el" href="classwxPropertyGrid.htm#a24">wxPropertyGrid::Compact</a> is called. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a170" doxytag="wxPropertyGrid::SwitchState" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a170">SwitchState</a> (<a class="el" href="classwxPropertyGridState.htm">wxPropertyGridState</a> *pNewState)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Mostly useful for page switching. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a171" doxytag="wxPropertyGrid::SetPropertyHelpString" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><b>SetPropertyHelpString</b> (wxPGId id, const wxString &amp;help_string)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a172" doxytag="wxPropertyGrid::SetPropertyHelpString" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><b>SetPropertyHelpString</b> (wxPGNameStr name, const wxString &amp;help_string)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a173">SetPropertyLabel</a> (wxPGId id, const wxString &amp;newproplabel)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets label of a property.  <a href="#a173"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a174">SetPropertyLabel</a> (wxPGNameStr name, const wxString &amp;newproplabel)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets label of a property.  <a href="#a174"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a175">SetPropertyName</a> (wxPGId id, const wxString &amp;newname)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets name of a property.  <a href="#a175"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a176">SetPropertyName</a> (wxPGNameStr name, const wxString &amp;newname)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets name of a property.  <a href="#a176"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a177" doxytag="wxPropertyGrid::SetPropertyValue" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a177">SetPropertyValue</a> (wxPGId id, long value)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets value (long integer) of a property. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a178" doxytag="wxPropertyGrid::SetPropertyValue" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a178">SetPropertyValue</a> (wxPGId id, int value)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets value (integer) of a property. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a179" doxytag="wxPropertyGrid::SetPropertyValue" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a179">SetPropertyValue</a> (wxPGId id, double value)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets value (floating point) of a property. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a180" doxytag="wxPropertyGrid::SetPropertyValue" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a180">SetPropertyValue</a> (wxPGId id, bool value)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets value (bool) of a property. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a181">SetPropertyValue</a> (wxPGId id, const wxString &amp;value)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets value (wxString) of a property.  <a href="#a181"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a182" doxytag="wxPropertyGrid::SetPropertyValue" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><b>SetPropertyValue</b> (wxPGId id, const wxChar *value)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a183" doxytag="wxPropertyGrid::SetPropertyValue" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a183">SetPropertyValue</a> (wxPGId id, const wxArrayString &amp;value)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets value (wxArrayString) of a property. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a184" doxytag="wxPropertyGrid::SetPropertyValue" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a184">SetPropertyValue</a> (wxPGId id, void *value)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets value (void*) of a property. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a185" doxytag="wxPropertyGrid::SetPropertyValue" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a185">SetPropertyValue</a> (wxPGId id, wxObject *value)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets value (wxObject*) of a property. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a186" doxytag="wxPropertyGrid::SetPropertyValue" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><b>SetPropertyValue</b> (wxPGId id, wxObject &amp;value)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a187" doxytag="wxPropertyGrid::SetPropertyValue" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a187">SetPropertyValue</a> (wxPGId id, wxVariant &amp;value)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets value (wxVariant&amp;) of a property. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a188" doxytag="wxPropertyGrid::SetPropertyValue" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a188">SetPropertyValue</a> (wxPGId id, const wxPoint &amp;value)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets value (wxPoint&amp;) of a property. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a189" doxytag="wxPropertyGrid::SetPropertyValue" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a189">SetPropertyValue</a> (wxPGId id, const wxSize &amp;value)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets value (wxSize&amp;) of a property. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a190" doxytag="wxPropertyGrid::SetPropertyValue" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a190">SetPropertyValue</a> (wxPGId id, const wxArrayInt &amp;value)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets value (wxArrayInt&amp;) of a property. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a191" doxytag="wxPropertyGrid::SetPropertyValue" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a191">SetPropertyValue</a> (wxPGNameStr name, long value)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets value (long integer) of a property. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a192" doxytag="wxPropertyGrid::SetPropertyValue" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a192">SetPropertyValue</a> (wxPGNameStr name, int value)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets value (integer) of a property. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a193" doxytag="wxPropertyGrid::SetPropertyValue" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a193">SetPropertyValue</a> (wxPGNameStr name, double value)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets value (floating point) of a property. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a194" doxytag="wxPropertyGrid::SetPropertyValue" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a194">SetPropertyValue</a> (wxPGNameStr name, bool value)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets value (bool) of a property. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a195">SetPropertyValue</a> (wxPGNameStr name, const wxString &amp;value)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets value (wxString) of a property.  <a href="#a195"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a196">SetPropertyValue</a> (wxPGNameStr name, const wxChar *value)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets value (wxString) of a property.  <a href="#a196"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a197" doxytag="wxPropertyGrid::SetPropertyValue" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a197">SetPropertyValue</a> (wxPGNameStr name, void *value)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets value (void*) of a property. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a198" doxytag="wxPropertyGrid::SetPropertyValue" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a198">SetPropertyValue</a> (wxPGNameStr name, const wxArrayString &amp;value)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets value (wxArrayString) of a property. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a199" doxytag="wxPropertyGrid::SetPropertyValue" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a199">SetPropertyValue</a> (wxPGNameStr name, wxObject *value)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets value (wxObject*) of a property. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a200" doxytag="wxPropertyGrid::SetPropertyValue" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><b>SetPropertyValue</b> (wxPGNameStr name, wxObject &amp;value)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a201" doxytag="wxPropertyGrid::SetPropertyValue" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a201">SetPropertyValue</a> (wxPGNameStr name, wxVariant &amp;value)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets value (wxVariant&amp;) of a property. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a202" doxytag="wxPropertyGrid::SetPropertyValue" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a202">SetPropertyValue</a> (wxPGNameStr name, const wxPoint &amp;value)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets value (wxPoint&amp;) of a property. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a203" doxytag="wxPropertyGrid::SetPropertyValue" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a203">SetPropertyValue</a> (wxPGNameStr name, const wxSize &amp;value)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets value (wxSize&amp;) of a property. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a204" doxytag="wxPropertyGrid::SetPropertyValue" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a204">SetPropertyValue</a> (wxPGNameStr name, const wxArrayInt &amp;value)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets value (wxArrayInt&amp;) of a property. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a205">SetPropertyValueUnspecified</a> (wxPGId id)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets property's value to unspecified.  <a href="#a205"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a206" doxytag="wxPropertyGrid::SetPropertyUnspecified" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><b>SetPropertyUnspecified</b> (wxPGNameStr name)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a207">SetPropertyValues</a> (const wxList &amp;list, wxPGId default_category)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets various property values from a list of wxVariants.  <a href="#a207"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a208" doxytag="wxPropertyGrid::SetPropertyValues" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><b>SetPropertyValues</b> (const wxVariant &amp;list, wxPGId default_category)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a209" doxytag="wxPropertyGrid::SetPropertyValues" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><b>SetPropertyValues</b> (const wxList &amp;list, const wxString &amp;default_category=wxEmptyString)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a210" doxytag="wxPropertyGrid::SetPropertyValues" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><b>SetPropertyValues</b> (const wxVariant &amp;list, const wxString &amp;default_category=wxEmptyString)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a211">SetVerticalSpacing</a> (int vspacing)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets vertical spacing.  <a href="#a211"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a212" doxytag="wxPropertyGrid::ShowLowPriority" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a212">ShowLowPriority</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Shows all low priority properties. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a213" doxytag="wxPropertyGrid::Sort" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a213">Sort</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sorts all items at all levels (except sub-properties). <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a214" doxytag="wxPropertyGrid::Sort" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a214">Sort</a> (wxPGId id)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sorts children of a category. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a215" doxytag="wxPropertyGrid::Sort" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a215">Sort</a> (wxPGNameStr name)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sorts children of a category. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>virtual void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a216">SetWindowStyleFlag</a> (long style)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Overridden function.  <a href="#a216"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a217">SetDefaultPriority</a> (int priority)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">All properties added/inserted will have given priority by default.  <a href="#a217"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a218" doxytag="wxPropertyGrid::TogglePropertyPriority" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a218">TogglePropertyPriority</a> (wxPGId id)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Toggles priority of a property between wxPG_HIGH and wxPG_LOW. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a219" doxytag="wxPropertyGrid::TogglePropertyPriority" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a219">TogglePropertyPriority</a> (wxPGNameStr name)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Toggles priority of a property between wxPG_HIGH and wxPG_LOW. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a220" doxytag="wxPropertyGrid::ResetDefaultPriority" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a220">ResetDefaultPriority</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Same as SetDefaultPriority(wxPG_HIGH). <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a221" doxytag="wxPropertyGrid::GetInternalFlags" ></a>
long&nbsp;</td><td class="memItemRight" valign=bottom><b>GetInternalFlags</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a222" doxytag="wxPropertyGrid::ClearInternalFlag" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><b>ClearInternalFlag</b> (long flag)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a223" doxytag="wxPropertyGrid::GetBottomY" ></a>
unsigned int&nbsp;</td><td class="memItemRight" valign=bottom><b>GetBottomY</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a224" doxytag="wxPropertyGrid::SetBottomY" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><b>SetBottomY</b> (unsigned int y)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="a225" doxytag="wxPropertyGrid::PropertyWasModified" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#a225">PropertyWasModified</a> (<a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *p)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Call after a property modified internally. <br><br></td></tr>
<tr><td colspan=2><br><h2>Static Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#e0">AutoGetTranslation</a> (bool enable)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This static function enables or disables automatic use of wxGetTranslation for following strings: wxEnumProperty list labels, wxFlagsProperty sub-property labels.  <a href="#e0"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="e1" doxytag="wxPropertyGrid::GetPropertyValueAsString" ></a>
wxString&nbsp;</td><td class="memItemRight" valign=bottom><b>GetPropertyValueAsString</b> (wxPGId id)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="e2" doxytag="wxPropertyGrid::GetPropertyValueAsLong" ></a>
long&nbsp;</td><td class="memItemRight" valign=bottom><b>GetPropertyValueAsLong</b> (wxPGId id)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="e3" doxytag="wxPropertyGrid::GetPropertyValueAsInt" ></a>
int&nbsp;</td><td class="memItemRight" valign=bottom><b>GetPropertyValueAsInt</b> (wxPGId id)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="e4" doxytag="wxPropertyGrid::GetPropertyValueAsBool" ></a>
bool&nbsp;</td><td class="memItemRight" valign=bottom><b>GetPropertyValueAsBool</b> (wxPGId id)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="e5" doxytag="wxPropertyGrid::GetPropertyValueAsDouble" ></a>
double&nbsp;</td><td class="memItemRight" valign=bottom><b>GetPropertyValueAsDouble</b> (wxPGId id)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="e6" doxytag="wxPropertyGrid::GetPropertyValueAsArrayString" ></a>
const wxArrayString &amp;&nbsp;</td><td class="memItemRight" valign=bottom><b>GetPropertyValueAsArrayString</b> (wxPGId id)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="e7" doxytag="wxPropertyGrid::GetPropertyValueAsWxObjectPtr" ></a>
const wxObject *&nbsp;</td><td class="memItemRight" valign=bottom><b>GetPropertyValueAsWxObjectPtr</b> (wxPGId id)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="e8" doxytag="wxPropertyGrid::GetPropertyValueAsVoidPtr" ></a>
void *&nbsp;</td><td class="memItemRight" valign=bottom><b>GetPropertyValueAsVoidPtr</b> (wxPGId id)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="e9" doxytag="wxPropertyGrid::GetPropertyValueAsPoint" ></a>
const wxPoint &amp;&nbsp;</td><td class="memItemRight" valign=bottom><b>GetPropertyValueAsPoint</b> (wxPGId id)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="e10" doxytag="wxPropertyGrid::GetPropertyValueAsSize" ></a>
const wxSize &amp;&nbsp;</td><td class="memItemRight" valign=bottom><b>GetPropertyValueAsSize</b> (wxPGId id)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="e11" doxytag="wxPropertyGrid::GetPropertyValueAsArrayInt" ></a>
const wxArrayInt &amp;&nbsp;</td><td class="memItemRight" valign=bottom><b>GetPropertyValueAsArrayInt</b> (wxPGId id)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#e12">InitAllTypeHandlers</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Initializes *all* property types.  <a href="#e12"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#e13">IsPropertyExpanded</a> (wxPGId id)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns TRUE if given property is expanded.  <a href="#e13"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="classwxPGValueType.htm">wxPGValueType</a> *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#e14">RegisterValueType</a> (<a class="el" href="classwxPGValueType.htm">wxPGValueType</a> *valueclass, bool no_def_check=FALSE)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Registers a new value type.  <a href="#e14"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>wxPGEditor *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#e15">RegisterEditorClass</a> (wxPGEditor *valueclass, bool no_def_check=FALSE)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Registers a new editor class.  <a href="#e15"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#e16">SetBoolChoices</a> (const wxChar *true_choice, const wxChar *false_choice)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Lets user to set the strings listed in the choice dropdown of a wxBoolProperty.  <a href="#e16"></a><br><br></td></tr>
</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
wxPropertyGrid is a specialized two-column grid for editing properties such as strings, numbers, flagsets, fonts, and colours. wxPropertySheet used to do the very same thing, but it hasn't been updated for a while and it is currently deprecated. 
<p>
wxPropertyGrid is modeled after .NET propertygrid (hence the name), and thus features are similar. However, inorder to keep the widget lightweight, it does not (and will not) have toolbar for mode and page selection, nor the help text box. wxAdvancedPropertyGrid (or something similarly named) is planned to have these features in some distant future.<p>
<h4>Derived from</h4>
<p>
wxScrolledWindow<br>
 wxPanel<br>
 wxWindow<br>
 wxEvtHandler<br>
 wxObject<br>
<p>
<h4>Include files</h4>
<p>
&lt;wx/propertygrid/propertygrid.h&gt;<p>
<h4>Window styles</h4>
<p>
<a class="el" href="group__wndflags.htm">Additional Window Styles</a><p>
<h4>Event handling</h4>
<p>
To process input from a propertygrid control, use these event handler macros to direct input to member functions that take a <a class="el" href="classwxPropertyGridEvent.htm">wxPropertyGridEvent</a> argument.<p>
<table border="1" cellspacing="3" cellpadding="3">
<tr>
<td>EVT_PG_SELECTED (id, func)</td><td>Property is selected. </td></tr>
<tr>
<td>EVT_PG_CHANGED (id, func)</td><td>Property value is modified. </td></tr>
<tr>
<td>EVT_PG_HIGHLIGHTED (id, func)</td><td>Mouse moves over property. Event's property is NULL if hovered on area that is not a property. </td></tr>
</table>
<p>
<dl compact><dt><b>See also:</b></dt><dd><a class="el" href="classwxPropertyGridEvent.htm">wxPropertyGridEvent</a></dd></dl>
<dl compact><dt><b>Remarks:</b></dt><dd></dd></dl>
<ul>
<li>Following functions do not automatically update the screen: Append. You will need to explicitly call Refresh() or <a class="el" href="classwxPropertyGrid.htm#a148">RedrawAllVisible()</a> (preferred since it guarantees there is no flicker) <b>if</b> you called one of these functions outside parent window constructor.</li></ul>
<p>
<ul>
<li>Use Freeze() and Thaw() respectively to disable and enable drawing. This will also delay sorting etc. miscellaneous calculations to the last moment.</li></ul>
<p>
<ul>
<li>Most methods have two versions - one which accepts property id (faster) and another that accepts property name.</li></ul>
<p>
For code examples, see the main page. 
<p>
<hr><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" name="a0" doxytag="wxPropertyGrid::wxPropertyGrid" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> wxPropertyGrid::wxPropertyGrid </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Two step constructor. 
<p>
Call Create when this constructor is called to build up the wxPropertyGrid    </td>
  </tr>
</table>
<a class="anchor" name="a1" doxytag="wxPropertyGrid::wxPropertyGrid" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> wxPropertyGrid::wxPropertyGrid </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">wxWindow *&nbsp;</td>
          <td class="mdname" nowrap> <em>parent</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>wxWindowID&nbsp;</td>
          <td class="mdname" nowrap> <em>id</em> = -1, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const wxPoint &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>pos</em> = wxDefaultPosition, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const wxSize &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>size</em> = wxDefaultSize, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>long&nbsp;</td>
          <td class="mdname" nowrap> <em>style</em> = wxPG_DEFAULT_STYLE, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const wxChar *&nbsp;</td>
          <td class="mdname" nowrap> <em>name</em> = wxPropertyGridNameStr</td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
The default constructor. 
<p>
The styles to be used are styles valid for the wxWindow and wxScrolledWindow. <dl compact><dt><b>See also:</b></dt><dd><a class="el" href="group__wndflags.htm">Additional Window Styles</a> </dd></dl>
    </td>
  </tr>
</table>
<hr><h2>Member Function Documentation</h2>
<a class="anchor" name="a3" doxytag="wxPropertyGrid::Append" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> wxPGId wxPropertyGrid::Append </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>property</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Appends property to the list. 
<p>
wxPropertyGrid assumes ownership of the object. Becomes child of most recently added category. <dl compact><dt><b>Remarks:</b></dt><dd><ul>
<li>If appending a category with name identical to a category already in the wxPropertyGrid, then newly created category is deleted, and most recently added category (under which properties are appended) is set to the one with same name. This allows easier adding of items to same categories in multiple passes.</li><li>Does not automatically redraw the control, so you may need to call RedrawAllVisible when calling this function after control has been shown for the first time. </li></ul>
</dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="z0_13" doxytag="wxPropertyGrid::ArrayStringToString" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyGrid::ArrayStringToString </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">wxString &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>dst</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const wxArrayString &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>src</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>wxChar&nbsp;</td>
          <td class="mdname" nowrap> <em>preDelim</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>wxChar&nbsp;</td>
          <td class="mdname" nowrap> <em>postDelim</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>int&nbsp;</td>
          <td class="mdname" nowrap> <em>flags</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [static]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Generates contents for string dst based on the convetents of wxArrayString src. 
<p>
Format will be str1&lt;postDelim&gt; str2&lt;postDelim&gt; and so on. Set flags to 1 inorder to convert backslashes to double-back- slashes and "&lt;preDelims&gt;"'s to "\&lt;preDelims&gt;".     </td>
  </tr>
</table>
<a class="anchor" name="e0" doxytag="wxPropertyGrid::AutoGetTranslation" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyGrid::AutoGetTranslation </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">bool&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>enable</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [static]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
This static function enables or disables automatic use of wxGetTranslation for following strings: wxEnumProperty list labels, wxFlagsProperty sub-property labels. 
<p>
Default is FALSE.     </td>
  </tr>
</table>
<a class="anchor" name="a13" doxytag="wxPropertyGrid::CenterSplitter" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyGrid::CenterSplitter </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">bool&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>enable_auto_centering</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Centers the splitter. 
<p>
If argument is TRUE, automatic splitter centering is enabled (only applicapple if style wxPG_SPLITTERAUTOCENTER was defined).     </td>
  </tr>
</table>
<a class="anchor" name="a15" doxytag="wxPropertyGrid::Clear" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyGrid::Clear </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Deletes all properties. 
<p>
Does not free memory allocated for arrays etc. This should *not* be called in <a class="el" href="classwxPropertyGridManager.htm">wxPropertyGridManager</a>.     </td>
  </tr>
</table>
<a class="anchor" name="a22" doxytag="wxPropertyGrid::Collapse" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> bool wxPropertyGrid::Collapse </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">wxPGNameStr&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>name</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Collapses given category or property with children. 
<p>
Returns true if actually collapses.     </td>
  </tr>
</table>
<a class="anchor" name="a21" doxytag="wxPropertyGrid::Collapse" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> bool wxPropertyGrid::Collapse </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">wxPGId&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>p</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Collapses given category or property with children. 
<p>
Returns true if actually collapses.     </td>
  </tr>
</table>
<a class="anchor" name="a14" doxytag="wxPropertyGrid::Create" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> bool wxPropertyGrid::Create </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">wxWindow *&nbsp;</td>
          <td class="mdname" nowrap> <em>parent</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>wxWindowID&nbsp;</td>
          <td class="mdname" nowrap> <em>id</em> = -1, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const wxPoint &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>pos</em> = wxDefaultPosition, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const wxSize &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>size</em> = wxDefaultSize, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>long&nbsp;</td>
          <td class="mdname" nowrap> <em>style</em> = wxPG_DEFAULT_STYLE, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const wxChar *&nbsp;</td>
          <td class="mdname" nowrap> <em>name</em> = wxPropertyGridNameStr</td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Two step creation. 
<p>
Whenever the control is created without any parameters, use Create to actually create it. Don't access the control's public methods before this is called <dl compact><dt><b>See also:</b></dt><dd><a class="el" href="group__wndflags.htm">Additional Window Styles</a> </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="a25" doxytag="wxPropertyGrid::Delete" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyGrid::Delete </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">wxPGId&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>id</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Deletes a property by id. 
<p>
If category is deleted, all children are automatically deleted as well.     </td>
  </tr>
</table>
<a class="anchor" name="z0_0" doxytag="wxPropertyGrid::EditorsValueWasModified" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyGrid::EditorsValueWasModified </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Call when editor widget's contents is modified. 
<p>
For example, this is called when changes text in wxTextCtrl (used in wxStringProperty and wxIntProperty). <dl compact><dt><b>Remarks:</b></dt><dd>This should only be called by properties. </dd></dl>
<dl compact><dt><b>See also:</b></dt><dd><a class="el" href="classwxPGProperty.htm#a10"></a> </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="a37" doxytag="wxPropertyGrid::EnsureVisible" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> bool wxPropertyGrid::EnsureVisible </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">wxPGNameStr&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>name</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Scrolls and/or expands items to ensure that the given item is visible. 
<p>
Returns TRUE if something was actually done.     </td>
  </tr>
</table>
<a class="anchor" name="a36" doxytag="wxPropertyGrid::EnsureVisible" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> bool wxPropertyGrid::EnsureVisible </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">wxPGId&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>id</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Scrolls and/or expands items to ensure that the given item is visible. 
<p>
Returns TRUE if something was actually done.     </td>
  </tr>
</table>
<a class="anchor" name="a39" doxytag="wxPropertyGrid::Expand" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> bool wxPropertyGrid::Expand </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">wxPGNameStr&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>name</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Expands given category or property with children. 
<p>
Returns true if actually expands.     </td>
  </tr>
</table>
<a class="anchor" name="a38" doxytag="wxPropertyGrid::Expand" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> bool wxPropertyGrid::Expand </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">wxPGId&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>id</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Expands given category or property with children. 
<p>
Returns true if actually expands.     </td>
  </tr>
</table>
<a class="anchor" name="z0_4" doxytag="wxPropertyGrid::GenerateEditorTextCtrl" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> wxPGCtrlClass* wxPropertyGrid::GenerateEditorTextCtrl </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const wxPoint &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>pos</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const wxSize &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>sz</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const wxString &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>value</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>wxPGCtrlClass *&nbsp;</td>
          <td class="mdname" nowrap> <em>secondary</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const wxSize &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>imsz</em> = wxDefaultSize</td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Shortcut for creating text editor widget. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>pos</em>&nbsp;</td><td>Same as pos given for CreateEditor. </td></tr>
    <tr><td valign=top><em>sz</em>&nbsp;</td><td>Same as sz given for CreateEditor. </td></tr>
    <tr><td valign=top><em>value</em>&nbsp;</td><td>Initial text for wxTextCtrl. </td></tr>
    <tr><td valign=top><em>secondary</em>&nbsp;</td><td>If right-side control, such as button, also created, then create it first and pass it as this parameter. </td></tr>
  </table>
</dl>
<dl compact><dt><b>Remarks:</b></dt><dd>Note that this should generally be called only by new classes derived from <a class="el" href="classwxPGProperty.htm">wxPGProperty</a>. </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="a54" doxytag="wxPropertyGrid::GetFirstChild" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> wxPGId wxPropertyGrid::GetFirstChild </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">wxPGId&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>parent</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns id of first child of given property. 
<p>
<dl compact><dt><b>Remarks:</b></dt><dd>Returns even sub-properties, so if you do not want to iterate through children of wxFontProperty, for example, use IsSubProperty(). </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="a50" doxytag="wxPropertyGrid::GetFirstVisible" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> wxPGId wxPropertyGrid::GetFirstVisible </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns id of first visible item, whether it is a category or property. 
<p>
Note that visible item means category, property, or sub-property which user can see when control is scrolled properly. It does not only mean items that are actually painted on the screen.     </td>
  </tr>
</table>
<a class="anchor" name="z0_6" doxytag="wxPropertyGrid::GetGoodEditorDialogPosition" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> wxPoint wxPropertyGrid::GetGoodEditorDialogPosition </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td>
          <td class="mdname" nowrap> <em>p</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const wxSize &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>sz</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Generates position for a widget editor dialog box. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>p</em>&nbsp;</td><td>Property for which dialog is positioned. </td></tr>
    <tr><td valign=top><em>sz</em>&nbsp;</td><td>Known or over-approximated size of the dialog. </td></tr>
  </table>
</dl>
<dl compact><dt><b>Return values:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>Position</em>&nbsp;</td><td>for dialog. </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a class="anchor" name="a52" doxytag="wxPropertyGrid::GetGrid" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="classwxPropertyGrid.htm">wxPropertyGrid</a>* wxPropertyGrid::GetGrid </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns pointer to itself. 
<p>
Dummy function that enables same kind of code to use wxPropertyGrid and <a class="el" href="classwxPropertyGridManager.htm">wxPropertyGridManager</a>.     </td>
  </tr>
</table>
<a class="anchor" name="a59" doxytag="wxPropertyGrid::GetLastChild" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> wxPGId wxPropertyGrid::GetLastChild </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">wxPGId&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>parent</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns id of last child of given property. 
<p>
<dl compact><dt><b>Remarks:</b></dt><dd>Returns even sub-properties. </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="a58" doxytag="wxPropertyGrid::GetLastProperty" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> wxPGId wxPropertyGrid::GetLastProperty </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns id of last item. 
<p>
Ignores categories and sub-properties.     </td>
  </tr>
</table>
<a class="anchor" name="a61" doxytag="wxPropertyGrid::GetLastVisible" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> wxPGId wxPropertyGrid::GetLastVisible </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns id of last visible item. 
<p>
Does <b>not</b> ignore categories sub-properties.     </td>
  </tr>
</table>
<a class="anchor" name="a63" doxytag="wxPropertyGrid::GetNextProperty" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> wxPGId wxPropertyGrid::GetNextProperty </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">wxPGId&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>id</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns id of next property. 
<p>
This does <b>not</b> iterate to sub-properties or categories, unlike GetNextVisible.     </td>
  </tr>
</table>
<a class="anchor" name="a67" doxytag="wxPropertyGrid::GetNextVisible" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> wxPGId wxPropertyGrid::GetNextVisible </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">wxPGId&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>property</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns id of next visible item. 
<p>
Note that visible item means category, property, or sub-property which user can see when control is scrolled properly. It does not only mean items that are actually painted on the screen.     </td>
  </tr>
</table>
<a class="anchor" name="a68" doxytag="wxPropertyGrid::GetPrevProperty" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> wxPGId wxPropertyGrid::GetPrevProperty </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">wxPGId&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>id</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns id of previous property. 
<p>
Unlike GetPrevVisible, this skips categories and sub-properties.     </td>
  </tr>
</table>
<a class="anchor" name="a102" doxytag="wxPropertyGrid::GetPropertyByLabel" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> wxPGId wxPropertyGrid::GetPropertyByLabel </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const wxString &amp;&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>name</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns id of property with given label (case-sensitive). 
<p>
If there is no property with such label, returned property id is invalid ( i.e. it will return FALSE with IsOk method). If there are multiple properties with identical name, most recent added is returned.     </td>
  </tr>
</table>
<a class="anchor" name="a103" doxytag="wxPropertyGrid::GetPropertyByName" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> wxPGId wxPropertyGrid::GetPropertyByName </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">wxPGNameStr&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>name</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns id of property with given name (case-sensitive). 
<p>
If there is no property with such name, returned property id is invalid ( i.e. it will return FALSE with IsOk method).     </td>
  </tr>
</table>
<a class="anchor" name="a72" doxytag="wxPropertyGrid::GetPropertyCategory" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> wxPGId wxPropertyGrid::GetPropertyCategory </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">wxPGId&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>id</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns id of property's category, if any. 
<p>
If no immediate category parent, iterates until top level found.     </td>
  </tr>
</table>
<a class="anchor" name="a89" doxytag="wxPropertyGrid::GetPropertyValue" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> wxVariant wxPropertyGrid::GetPropertyValue </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">wxPGNameStr&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>name</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Gets value of a property. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>name</em>&nbsp;</td><td>Label of a property. </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>Returns value as wxVariant. </dd></dl>
<dl compact><dt><b>See also:</b></dt><dd>id-based version for more information. </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="a88" doxytag="wxPropertyGrid::GetPropertyValue" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> wxVariant wxPropertyGrid::GetPropertyValue </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">wxPGId&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>id</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Gets value of a property. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>id</em>&nbsp;</td><td>Id of a property. </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>Returns value as wxVariant. </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="a41" doxytag="wxPropertyGrid::GetPropertyValues" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> wxVariant wxPropertyGrid::GetPropertyValues </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const wxString &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>listname</em> = wxEmptyString, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>wxPGId&nbsp;</td>
          <td class="mdname" nowrap> <em>baseparent</em> = wxPGIdGen((<a class="el" href="classwxPGProperty.htm">wxPGProperty</a>*)NULL), </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>long&nbsp;</td>
          <td class="mdname" nowrap> <em>flags</em> = 0</td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"> const<code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns a wxVariant list containing wxVariant versions of all property values. 
<p>
Order is not guaranteed, but generally it should match the visible order in the grid. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>flags</em>&nbsp;</td><td>Use wxKEEP_STRUCTURE to retain category structure; each sub category will be its own wxList of wxVariant. </td></tr>
  </table>
</dl>
<dl compact><dt><b>Remarks:</b></dt><dd></dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="a105" doxytag="wxPropertyGrid::GetRoot" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> wxPGId wxPropertyGrid::GetRoot </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns "root property". 
<p>
It does not have name, etc. and it is not visible. It is only useful for accessing its children.     </td>
  </tr>
</table>
<a class="anchor" name="e12" doxytag="wxPropertyGrid::InitAllTypeHandlers" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyGrid::InitAllTypeHandlers </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [static]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Initializes *all* property types. 
<p>
Causes references to all property classes in the library, so calling this may cause significant increase in executable size when linking with static library.     </td>
  </tr>
</table>
<a class="anchor" name="a116" doxytag="wxPropertyGrid::Insert" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> wxPGId wxPropertyGrid::Insert </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">wxPGId&nbsp;</td>
          <td class="mdname" nowrap> <em>priorthis</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td>
          <td class="mdname" nowrap> <em>newproperty</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Inserts property to the list. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>priorthis</em>&nbsp;</td><td>New property is inserted just prior to this. Available only in the first variant. There are two versions of this function to allow this parameter to be either an id or name to a property.</td></tr>
    <tr><td valign=top><em>parent</em>&nbsp;</td><td>New property is inserted under this category. Available only in the second variant. There are two versions of this function to allow this parameter to be either an id or name to a property.</td></tr>
    <tr><td valign=top><em>index</em>&nbsp;</td><td>Index under category. Available only in the second variant. If index is &lt; 0, property is appended in category.</td></tr>
    <tr><td valign=top><em>newproperty</em>&nbsp;</td><td>Pointer to the inserted property. wxPropertyGrid will take ownership of this object.</td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>Returns id for the property,</dd></dl>
<dl compact><dt><b>Remarks:</b></dt><dd></dd></dl>
While Append is always faster and more recommended way to add items, make note that when both data storages (categoric and non-categoric) are active, Insert becomes even more slow. This is especially true if current mode is non-categoric.<p>
Example of use:<p>
<pre class="fragment"><div>            <span class="comment">// append category</span>
            wxPGId my_cat_id = propertygrid-&gt;Append( <span class="keyword">new</span> wxPropertyCategoryClass (wxT(<span class="stringliteral">"My Category"</span>)) );

            ...

            <span class="comment">// insert into category - using second variant</span>
            wxPGId my_item_id_1 = propertygrid-&gt;Insert( my_cat_id, 0, <span class="keyword">new</span> wxStringProperty(wxT(<span class="stringliteral">"My String 1"</span>)) );

            <span class="comment">// insert before to first item - using first variant</span>
            wxPGId my_item_id_2 = propertygrid-&gt;Insert ( my_item_id, <span class="keyword">new</span> wxStringProperty(wxT(<span class="stringliteral">"My String 2"</span>)) );
</div></pre>    </td>
  </tr>
</table>
<a class="anchor" name="a128" doxytag="wxPropertyGrid::IsFrozen" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> bool wxPropertyGrid::IsFrozen </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns TRUE if updating is frozen (ie. 
<p>
Freeze() called but not yet Thaw() ).     </td>
  </tr>
</table>
<a class="anchor" name="e13" doxytag="wxPropertyGrid::IsPropertyExpanded" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> bool wxPropertyGrid::IsPropertyExpanded </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">wxPGId&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>id</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [static]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns TRUE if given property is expanded. 
<p>
Naturally, always returns FALSE for properties that cannot be expanded.     </td>
  </tr>
</table>
<a class="anchor" name="a148" doxytag="wxPropertyGrid::RedrawAllVisible" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyGrid::RedrawAllVisible </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Redraws the entire window. 
<p>
Use this instead of Refresh to avoid flicker.     </td>
  </tr>
</table>
<a class="anchor" name="e15" doxytag="wxPropertyGrid::RegisterEditorClass" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> wxPGEditor* wxPropertyGrid::RegisterEditorClass </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">wxPGEditor *&nbsp;</td>
          <td class="mdname" nowrap> <em>valueclass</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>bool&nbsp;</td>
          <td class="mdname" nowrap> <em>no_def_check</em> = FALSE</td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [static]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Registers a new editor class. 
<p>
<dl compact><dt><b>Return values:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>Pointer</em>&nbsp;</td><td>to the editor class instance that should be used. </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a class="anchor" name="e14" doxytag="wxPropertyGrid::RegisterValueType" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="classwxPGValueType.htm">wxPGValueType</a>* wxPropertyGrid::RegisterValueType </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGValueType.htm">wxPGValueType</a> *&nbsp;</td>
          <td class="mdname" nowrap> <em>valueclass</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>bool&nbsp;</td>
          <td class="mdname" nowrap> <em>no_def_check</em> = FALSE</td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [static]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Registers a new value type. 
<p>
Takes ownership of the object. <dl compact><dt><b>Return values:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>Pointer</em>&nbsp;</td><td>to the value type that should be used. If on with the same name already existed, then the first one will be used, and its pointer is returned instead. </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a class="anchor" name="a166" doxytag="wxPropertyGrid::SelectProperty" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyGrid::SelectProperty </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">wxPGId&nbsp;</td>
          <td class="mdname" nowrap> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>bool&nbsp;</td>
          <td class="mdname" nowrap> <em>focus</em> = FALSE</td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Selects a property. 
<p>
Editor widget is automatically created, but not focused unless focus is TRUE. This will generate wxEVT_PG_SELECT event. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>id</em>&nbsp;</td><td>Id to property to select. </td></tr>
  </table>
</dl>
<dl compact><dt><b>See also:</b></dt><dd>wxPropertyGrid::Unselect </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="e16" doxytag="wxPropertyGrid::SetBoolChoices" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyGrid::SetBoolChoices </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const wxChar *&nbsp;</td>
          <td class="mdname" nowrap> <em>true_choice</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const wxChar *&nbsp;</td>
          <td class="mdname" nowrap> <em>false_choice</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [static]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Lets user to set the strings listed in the choice dropdown of a wxBoolProperty. 
<p>
Defaults are "True" and "False", so changing them to, say, "Yes" and "No" may be useful in some less technical applications.     </td>
  </tr>
</table>
<a class="anchor" name="a160" doxytag="wxPropertyGrid::SetCellBackgroundColour" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyGrid::SetCellBackgroundColour </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const wxColour &amp;&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>col</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets default cell background colour - applies to property cells. 
<p>
Note that appearance of editor widgets may not be affected.     </td>
  </tr>
</table>
<a class="anchor" name="a161" doxytag="wxPropertyGrid::SetCellTextColour" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyGrid::SetCellTextColour </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const wxColour &amp;&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>col</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets default cell text colour - applies to property name and value text. 
<p>
Note that appearance of editor widgets may not be affected.     </td>
  </tr>
</table>
<a class="anchor" name="a217" doxytag="wxPropertyGrid::SetDefaultPriority" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyGrid::SetDefaultPriority </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>priority</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
All properties added/inserted will have given priority by default. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>priority</em>&nbsp;</td><td>can be wxPG_HIGH (default) or wxPG_LOW. </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a class="anchor" name="a153" doxytag="wxPropertyGrid::SetPropertyAttribute" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyGrid::SetPropertyAttribute </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">wxPGId&nbsp;</td>
          <td class="mdname" nowrap> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>int&nbsp;</td>
          <td class="mdname" nowrap> <em>attrid</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>wxPGVariant&nbsp;</td>
          <td class="mdname" nowrap> <em>value</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>long&nbsp;</td>
          <td class="mdname" nowrap> <em>arg_flags</em> = 0</td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets an attribute of a property. 
<p>
Ids and relevants values are totally specific to property classes and may affect either the given instance or all instances of that class. See <a class="el" href="group__attrids.htm">wxPropertyGrid Property Attribute Identifiers</a> for list of built-in attributes. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>arg_flags</em>&nbsp;</td><td>Optional. Use wxRECURSE to set the attribute to child properties as well. </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a class="anchor" name="a155" doxytag="wxPropertyGrid::SetPropertyColour" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyGrid::SetPropertyColour </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">wxPGId&nbsp;</td>
          <td class="mdname" nowrap> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const wxColour &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>col</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets background colour of property and all its children. 
<p>
Background brush cache is optimized for often set colours to be set last.     </td>
  </tr>
</table>
<a class="anchor" name="a174" doxytag="wxPropertyGrid::SetPropertyLabel" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyGrid::SetPropertyLabel </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">wxPGNameStr&nbsp;</td>
          <td class="mdname" nowrap> <em>name</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const wxString &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>newproplabel</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets label of a property. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>name</em>&nbsp;</td><td>Name of a property. </td></tr>
    <tr><td valign=top><em>newproplabel</em>&nbsp;</td><td>New label. </td></tr>
  </table>
</dl>
<dl compact><dt><b>Remarks:</b></dt><dd>This is the only way to set property's label. There is not wxPGProperty::SetLabel() method. </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="a173" doxytag="wxPropertyGrid::SetPropertyLabel" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyGrid::SetPropertyLabel </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">wxPGId&nbsp;</td>
          <td class="mdname" nowrap> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const wxString &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>newproplabel</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets label of a property. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>id</em>&nbsp;</td><td>Id of a property. </td></tr>
    <tr><td valign=top><em>newproplabel</em>&nbsp;</td><td>New label. </td></tr>
  </table>
</dl>
<dl compact><dt><b>Remarks:</b></dt><dd>This is the only way to set property's name. There is not wxPGProperty::SetLabel() method. </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="a176" doxytag="wxPropertyGrid::SetPropertyName" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyGrid::SetPropertyName </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">wxPGNameStr&nbsp;</td>
          <td class="mdname" nowrap> <em>name</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const wxString &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>newname</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets name of a property. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>name</em>&nbsp;</td><td>Label of a property. </td></tr>
    <tr><td valign=top><em>newname</em>&nbsp;</td><td>New name. </td></tr>
  </table>
</dl>
<dl compact><dt><b>Remarks:</b></dt><dd>This is the only way to set property's name. There is not wxPGProperty::SetName() method. </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="a175" doxytag="wxPropertyGrid::SetPropertyName" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyGrid::SetPropertyName </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">wxPGId&nbsp;</td>
          <td class="mdname" nowrap> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const wxString &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>newname</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets name of a property. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>id</em>&nbsp;</td><td>Id of a property. </td></tr>
    <tr><td valign=top><em>newname</em>&nbsp;</td><td>New name. </td></tr>
  </table>
</dl>
<dl compact><dt><b>Remarks:</b></dt><dd>This is the only way to set property's name. There is not wxPGProperty::SetName() method. </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="a196" doxytag="wxPropertyGrid::SetPropertyValue" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyGrid::SetPropertyValue </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">wxPGNameStr&nbsp;</td>
          <td class="mdname" nowrap> <em>name</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const wxChar *&nbsp;</td>
          <td class="mdname" nowrap> <em>value</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets value (wxString) of a property. 
<p>
For properties which value type is not string, calls <a class="el" href="classwxPGProperty.htm#a7">wxPGProperty::SetValueFromString</a> to translate the value.     </td>
  </tr>
</table>
<a class="anchor" name="a195" doxytag="wxPropertyGrid::SetPropertyValue" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyGrid::SetPropertyValue </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">wxPGNameStr&nbsp;</td>
          <td class="mdname" nowrap> <em>name</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const wxString &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>value</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets value (wxString) of a property. 
<p>
For properties which value type is not string, calls <a class="el" href="classwxPGProperty.htm#a7">wxPGProperty::SetValueFromString</a> to translate the value.     </td>
  </tr>
</table>
<a class="anchor" name="a181" doxytag="wxPropertyGrid::SetPropertyValue" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyGrid::SetPropertyValue </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">wxPGId&nbsp;</td>
          <td class="mdname" nowrap> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const wxString &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>value</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets value (wxString) of a property. 
<p>
<dl compact><dt><b>Remarks:</b></dt><dd>This method uses <a class="el" href="classwxPGProperty.htm#a7">wxPGProperty::SetValueFromString</a>, which all properties should implement. This means that there should not be a type error, and instead the string is converted to property's actual value type. </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="a207" doxytag="wxPropertyGrid::SetPropertyValues" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyGrid::SetPropertyValues </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const wxList &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>list</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>wxPGId&nbsp;</td>
          <td class="mdname" nowrap> <em>default_category</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets various property values from a list of wxVariants. 
<p>
If property with name is missing from the grid, new property is created under given default category (or root if omitted).     </td>
  </tr>
</table>
<a class="anchor" name="a205" doxytag="wxPropertyGrid::SetPropertyValueUnspecified" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyGrid::SetPropertyValueUnspecified </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">wxPGId&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>id</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets property's value to unspecified. 
<p>
If it has children (it may be category), then the same thing is done to them.     </td>
  </tr>
</table>
<a class="anchor" name="a211" doxytag="wxPropertyGrid::SetVerticalSpacing" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyGrid::SetVerticalSpacing </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>vspacing</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets vertical spacing. 
<p>
Can be 1, 2, or 3 - a value relative to font height. Value of 2 should be default on most platforms. <dl compact><dt><b>Remarks:</b></dt><dd>On wxMSW, wxComboBox, when used as property editor widget, will spill out with anything less than 3. </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="a216" doxytag="wxPropertyGrid::SetWindowStyleFlag" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual void wxPropertyGrid::SetWindowStyleFlag </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">long&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>style</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [virtual]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Overridden function. 
<p>
<dl compact><dt><b>See also:</b></dt><dd><a class="el" href="group__wndflags.htm">Additional Window Styles</a> </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="z0_9" doxytag="wxPropertyGrid::SLAlloc" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyGrid::SLAlloc </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">unsigned int&nbsp;</td>
          <td class="mdname" nowrap> <em>itemcount</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const wxChar **&nbsp;</td>
          <td class="mdname" nowrap> <em>items</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Puts items into sl. 
<p>
Automatic wxGetTranslation is used if enabled.     </td>
  </tr>
</table>
<hr>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="propgrid_8h-source.htm">propgrid.h</a></ul>
<hr size="1"><address style="align: right;"><small>Generated on Mon Jan 24 11:39:48 2005 for wxPropertyGrid by
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border=0 > 
</a>1.3.6 </small></address>
</body>
</html>
