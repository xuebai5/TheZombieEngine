<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>wxPropertyGrid: advprops.h Source File</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.3.6 -->
<div class="qindex"><a class="qindex" href="index.htm">Main&nbsp;Page</a> | <a class="qindex" href="modules.htm">Modules</a> | <a class="qindex" href="hierarchy.htm">Class&nbsp;Hierarchy</a> | <a class="qindex" href="annotated.htm">Class&nbsp;List</a> | <a class="qindex" href="files.htm">File&nbsp;List</a> | <a class="qindex" href="functions.htm">Class&nbsp;Members</a></div>
<h1>advprops.h</h1><div class="fragment"><pre>00001 
00002 <span class="comment">// Name:        advprops.h</span>
00003 <span class="comment">// Purpose:     wxPropertyGrid Advanced Properties (font, colour, etc.)</span>
00004 <span class="comment">// Author:      Jaakko Salli</span>
00005 <span class="comment">// Modified by:</span>
00006 <span class="comment">// Created:     Sep-25-2004</span>
00007 <span class="comment">// RCS-ID:      $Id:</span>
00008 <span class="comment">// Copyright:   (c) Jaakko Salli</span>
00009 <span class="comment">// Licence:     wxWindows license</span>
00011 <span class="comment"></span>
00012 <span class="preprocessor">#ifndef _WX_PROPGRID_ADVPROPS_H_</span>
00013 <span class="preprocessor"></span><span class="preprocessor">#define _WX_PROPGRID_ADVPROPS_H_</span>
00014 <span class="preprocessor"></span>
00015 <span class="preprocessor">#if defined(__GNUG__) &amp;&amp; !defined(NO_GCC_PRAGMA)</span>
00016 <span class="preprocessor"></span><span class="preprocessor">    #pragma interface "advprops.cpp"</span>
00017 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00018 <span class="preprocessor"></span>
00019 <span class="comment">// -----------------------------------------------------------------------</span>
00020 
00021 <span class="keywordtype">bool</span> WXDLLIMPEXP_PG operator == (<span class="keyword">const</span> wxFont&amp;, <span class="keyword">const</span> wxFont&amp;);
00022 
00023 WX_PG_DECLARE_VALUE_TYPE_WITH_DECL(wxFont,WXDLLIMPEXP_PG)
00024 
00025 WX_PG_DECLARE_VALUE_TYPE_WITH_DECL(wxColour,WXDLLIMPEXP_PG)
00026 
00027 <span class="keywordtype">bool</span> WXDLLIMPEXP_PG operator == (<span class="keyword">const</span> wxArrayInt&amp; array1, <span class="keyword">const</span> wxArrayInt&amp; array2);
00028 
00029 WX_PG_DECLARE_VALUE_TYPE_VOIDP_WITH_DECL(wxArrayInt,WXDLLIMPEXP_PG)
00030 
00031 <span class="comment">// -----------------------------------------------------------------------</span>
00032 
00033 <span class="comment">// Web colour is currently unsupported</span>
00034 #define wxPG_COLOUR_WEB_BASE        0x10000
00035 <span class="comment">//#define wxPG_TO_WEB_COLOUR(A)   ((wxUint32)(A+wxPG_COLOUR_WEB_BASE))</span>
00036 
00037 <span class="preprocessor">#define wxPG_COLOUR_CUSTOM      0xFFFFFF</span>
00038 <span class="preprocessor"></span>
<a name="l00046"></a><a class="code" href="classwxColourPropertyValue.htm">00046</a> <span class="keyword">class </span>WXDLLIMPEXP_PG wxColourPropertyValue : <span class="keyword">public</span> wxObject
00047 {
00048 <span class="keyword">public</span>:
<a name="l00066"></a><a class="code" href="classwxColourPropertyValue.htm#o0">00066</a>     wxUint32    m_type;
00067 
<a name="l00069"></a><a class="code" href="classwxColourPropertyValue.htm#o1">00069</a>     wxColour    m_colour;
00070 
00071     wxColourPropertyValue () { }
00072 
00073     <span class="keyword">inline</span> wxColourPropertyValue ( <span class="keyword">const</span> wxColour&amp; colour )
00074     {
00075         m_type = wxPG_COLOUR_CUSTOM;
00076         m_colour = colour;
00077     }
00078 
00079     <span class="keyword">inline</span> wxColourPropertyValue ( wxUint32 type )
00080     {
00081         m_type = type;
00082     }
00083 
00084     <span class="keyword">inline</span> wxColourPropertyValue ( wxUint32 type, <span class="keyword">const</span> wxColour&amp; colour )
00085     {
00086         m_type = type;
00087         m_colour = colour;
00088     }
00089 
00090 <span class="keyword">private</span>:
00091     DECLARE_DYNAMIC_CLASS(wxColourPropertyValue)
00092 };
00093 
00094 <span class="keywordtype">bool</span> WXDLLIMPEXP_PG operator == (<span class="keyword">const</span> wxColourPropertyValue&amp;, <span class="keyword">const</span> wxColourPropertyValue&amp;);
00095 
00096 WX_PG_DECLARE_VALUE_TYPE_WITH_DECL(wxColourPropertyValue,WXDLLIMPEXP_PG)
00097 
00098 <span class="comment">// -----------------------------------------------------------------------</span>
00099 <span class="comment">// Declare part of custom colour property macro pairs.</span>
00100 
00101 #define WX_PG_DECLARE_CUSTOM_COLOUR_PROPERTY_WITH_DECL(NAME,DECL) \
00102 WX_PG_DECLARE_PROPERTY_WITH_DECL(NAME,<span class="keyword">const</span> wxColourPropertyValue&amp;,*((wxColourPropertyValue*)NULL),WXDLLIMPEXP_PG)
00103 
00104 #define WX_PG_DECLARE_CUSTOM_COLOUR_PROPERTY(NAME) \
00105 WX_PG_DECLARE_PROPERTY(NAME,<span class="keyword">const</span> wxColourPropertyValue&amp;,*((wxColourPropertyValue*)NULL))
00106 
00107 #define WX_PG_DECLARE_CUSTOM_COLOUR_PROPERTY_USES_WXCOLOUR_WITH_DECL(NAME,DECL) \
00108 WX_PG_DECLARE_PROPERTY_WITH_DECL(NAME,<span class="keyword">const</span> wxColour&amp;,*wxBLACK,WXDLLIMPEXP_PG)
00109 
00110 #define WX_PG_DECLARE_CUSTOM_COLOUR_PROPERTY_USES_WXCOLOUR(NAME) \
00111 WX_PG_DECLARE_PROPERTY(NAME,<span class="keyword">const</span> wxColour&amp;,*wxBLACK))
00112 
00113 <span class="comment">// Declare advanced property types.</span>
00114 WX_PG_DECLARE_PROPERTY_WITH_DECL(wxFontProperty,<span class="keyword">const</span> wxFont&amp;,*wxNORMAL_FONT,WXDLLIMPEXP_PG)
00115 WX_PG_DECLARE_PROPERTY_WITH_DECL(wxSystemColourProperty,<span class="keyword">const</span> wxColourPropertyValue&amp;,*((wxColourPropertyValue*)NULL),WXDLLIMPEXP_PG)
00116 WX_PG_DECLARE_PROPERTY_WITH_DECL(wxCursorProperty,<span class="keywordtype">int</span>,wxCURSOR_NONE,WXDLLIMPEXP_PG)
00117 #<span class="keywordflow">if</span> wxUSE_IMAGE
00118 <span class="preprocessor">#include &lt;wx/image.h&gt;</span>
00119 WX_PG_DECLARE_PROPERTY_WITH_DECL(wxImageFileProperty,<span class="keyword">const</span> wxString&amp;,wxEmptyString,WXDLLIMPEXP_PG)
00120 #endif
00121 
00122 WX_PG_DECLARE_CUSTOM_COLOUR_PROPERTY_USES_WXCOLOUR_WITH_DECL(wxColourProperty,WXDLLIMPEXP_PG)
00123 
00124 <span class="comment">// MultiChoice is trickier.</span>
00125 <span class="keyword">extern</span> WXDLLIMPEXP_PG <a class="code" href="classwxPGProperty.htm">wxPGProperty</a>* wxPG_CONSTFUNC(wxMultiChoiceProperty)( <span class="keyword">const</span> wxString&amp;, <span class="keyword">const</span> wxString&amp; = wxPG_LABEL,
00126         <span class="keyword">const</span> wxArrayString&amp; strings = wxArrayString(),
00127         <span class="keyword">const</span> wxArrayInt&amp; value = *((wxArrayInt*)NULL) );
00128 
00129 <span class="keyword">extern</span> WXDLLIMPEXP_PG <a class="code" href="classwxPGProperty.htm">wxPGProperty</a>* wxPG_CONSTFUNC(wxMultiChoiceProperty)( <span class="keyword">const</span> wxString&amp;, <span class="keyword">const</span> wxString&amp; = wxPG_LABEL,
00130         <span class="keyword">const</span> wxArrayInt&amp; = wxArrayInt() );
00131 
00132 <span class="comment">// -----------------------------------------------------------------------</span>
00133 
00134 <span class="preprocessor">#ifdef _WX_PROPGRID_PROPDEV_H_</span>
00135 <span class="preprocessor"></span>
00136 <span class="keyword">class </span>WXDLLIMPEXP_PG wxFontPropertyClass : <span class="keyword">public</span> <a class="code" href="classwxPGPropertyWithChildren.htm">wxPGPropertyWithChildren</a>
00137 {
00138     WX_PG_DECLARE_PROPERTY_CLASS()
00139 <span class="keyword">public</span>:
00140 
00141     wxFontPropertyClass ( <span class="keyword">const</span> wxString&amp; label, <span class="keyword">const</span> wxString&amp; name, <span class="keyword">const</span> wxFont&amp; );
00142     <span class="keyword">virtual</span> ~wxFontPropertyClass ();
00143 
00144     WX_PG_DECLARE_PARENTAL_TYPE_METHODS()
00145     <span class="keyword">virtual</span> wxString <a class="code" href="classwxPGPropertyWithChildren.htm#a3">GetValueAsString</a> ( <span class="keywordtype">int</span> arg_flags = 0 ) <span class="keyword">const</span>;
00146 
00147     WX_PG_DECLARE_EVENT_METHODS()
00148     WX_PG_DECLARE_PARENTAL_METHODS()
00149 
00150 <span class="keyword">protected</span>:
00151     wxFont m_value_wxFont;
00152 };
00153 
00154 <span class="preprocessor">#endif</span>
00155 <span class="preprocessor"></span>
00156 <span class="comment">// -----------------------------------------------------------------------</span>
00157 
00158 <span class="preprocessor">#ifdef _WX_PROPGRID_PROPDEV_H_</span>
00159 <span class="preprocessor"></span>
00160 <span class="keyword">class </span>WXDLLIMPEXP_PG wxSystemColourPropertyClass : <span class="keyword">public</span> wxEnumPropertyClass
00161 {
00162     WX_PG_DECLARE_PROPERTY_CLASS()
00163 <span class="keyword">public</span>:
00164 
00165     wxSystemColourPropertyClass ( <span class="keyword">const</span> wxString&amp; label, <span class="keyword">const</span> wxString&amp; name,
00166         <span class="keyword">const</span> wxColourPropertyValue&amp; value );
00167     ~wxSystemColourPropertyClass ();
00168 
00169     WX_PG_DECLARE_BASIC_TYPE_METHODS()
00170     WX_PG_DECLARE_EVENT_METHODS()
00171     WX_PG_DECLARE_CUSTOM_PAINT_METHODS()
00172 
00173     <span class="comment">// Default is to use wxSystemSettings::GetColour(index). Override to use</span>
00174     <span class="comment">// custom colour tables etc.</span>
00175     <span class="keyword">virtual</span> <span class="keywordtype">long</span> GetColour ( <span class="keywordtype">int</span> index );
00176 
00177 <span class="keyword">protected</span>:
00178 
00179     <span class="comment">// Special constructors to be used by derived classes.</span>
00180     wxSystemColourPropertyClass( <span class="keyword">const</span> wxString&amp; label, <span class="keyword">const</span> wxString&amp; name,
00181         <span class="keyword">const</span> wxChar** labels, <span class="keyword">const</span> <span class="keywordtype">long</span>* values, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> itemcount,
00182         <span class="keyword">const</span> wxColourPropertyValue&amp; value );
00183     wxSystemColourPropertyClass( <span class="keyword">const</span> wxString&amp; label, <span class="keyword">const</span> wxString&amp; name,
00184         <span class="keyword">const</span> wxChar** labels, <span class="keyword">const</span> <span class="keywordtype">long</span>* values, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> itemcount,
00185         <span class="keyword">const</span> wxColour&amp; value );
00186 
00187     <span class="keywordtype">void</span> Init ( <span class="keywordtype">int</span> type, <span class="keyword">const</span> wxColour&amp; colour );
00188 
00189     <span class="comment">// Translates colour to a int value, return wxNOT_FOUND if no match.</span>
00190     <span class="keywordtype">int</span> ColToInd ( <span class="keyword">const</span> wxColour&amp; colour );
00191 
00192     wxColourPropertyValue   m_value;
00193 };
00194 
00195 <span class="preprocessor">#endif</span>
00196 <span class="preprocessor"></span>
00197 <span class="comment">// -----------------------------------------------------------------------</span>
00198 
00199 <span class="preprocessor">#if defined(_WX_PROPGRID_PROPDEV_H_) &amp;&amp; wxUSE_IMAGE</span>
00200 <span class="preprocessor"></span>
00201 WXDLLIMPEXP_PG <span class="keyword">const</span> wxString&amp; wxPGGetDefaultImageWildcard ();
00202 
00203 <span class="preprocessor">#endif</span>
00204 <span class="preprocessor"></span>
00205 <span class="comment">// -----------------------------------------------------------------------</span>
00206 
00207 <span class="preprocessor">#endif // _WX_PROPGRID_ADVPROPS_H_</span>
</pre></div><hr size="1"><address style="align: right;"><small>Generated on Mon Jan 24 11:39:46 2005 for wxPropertyGrid by
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border=0 > 
</a>1.3.6 </small></address>
</body>
</html>
